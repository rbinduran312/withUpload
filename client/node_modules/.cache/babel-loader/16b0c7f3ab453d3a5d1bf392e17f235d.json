{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DJACTOR\\\\Documents\\\\work\\\\withUpload-master\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DashboardActions from './DashboardActions';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\nimport { logout } from '../../actions/auth';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: {\n    user\n  },\n  profile: {\n    profile\n  },\n  logout\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Dashboard\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), \" Welcome \", user && user.name), profile !== null ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(DashboardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"my-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: () => deleteAccount(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user-minus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), \" Delete My Account\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    onClick: logout,\n    href: \"#!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-sign-out-alt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), ' ', React.createElement(\"span\", {\n    className: \"hide-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Logout\")))) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"You have not yet setup a profile, please add some info\"), React.createElement(Link, {\n    to: \"/create-profile\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Create Profile\")));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile,\n  deleteAccount,\n  logout\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/DJACTOR/Documents/work/withUpload-master/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","Link","PropTypes","connect","DashboardActions","getCurrentProfile","deleteAccount","logout","Dashboard","auth","user","profile","name","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DashboardActions from './DashboardActions';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\nimport { logout } from '../../actions/auth';\n\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: { user },\n  profile: { profile },\n  logout\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Dashboard</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\" /> Welcome {user && user.name}\n      </p>\n      {profile !== null ? (\n        <Fragment>\n          <DashboardActions />\n          <div className=\"my-2\">\n            <button className=\"btn btn-danger\" onClick={() => deleteAccount()}>\n              <i className=\"fas fa-user-minus\" /> Delete My Account\n            </button>\n          </div>\n          <div>\n            <a onClick={logout} href='#!'>\n            <i className='fas fa-sign-out-alt' />{' '}\n            <span className='hide-sm'>Logout</span>\n            </a>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p>You have not yet setup a profile, please add some info</p>\n          <Link to=\"/create-profile\" className=\"btn btn-primary my-1\">\n            Create Profile\n          </Link>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  logout: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount, logout })(\n  Dashboard\n);\n"]},"metadata":{},"sourceType":"module"}