{"ast":null,"code":"import axios from 'axios';\nimport store from '../store';\nimport { LOGOUT, CLEAR_PROFILE } from '../actions/types';\nconst api = axios.create({\n  baseURL: '/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n/**\n intercept any error responses from the api\n and check if the token is no longer valid.\n ie. Token has expired\n logout the user if the token has expired\n**/\n\napi.interceptors.response.use(res => res, err => {\n  if (err.response.data.msg === 'Token is not valid') {\n    store.dispatch({\n      type: LOGOUT\n    });\n    store.dispatch({\n      type: CLEAR_PROFILE\n    });\n  }\n\n  return Promise.reject(err);\n});\nexport default api;","map":{"version":3,"sources":["C:/Users/DJACTOR/Documents/work/withUpload-master/client/src/utils/api.js"],"names":["axios","store","LOGOUT","CLEAR_PROFILE","api","create","baseURL","headers","interceptors","response","use","res","err","data","msg","dispatch","type","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,MAAT,EAAiBC,aAAjB,QAAsC,kBAAtC;AAEA,MAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAE,MADc;AAEvBC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAFc,CAAb,CAAZ;AAMA;;;;;;;AAOAH,GAAG,CAACI,YAAJ,CAAiBC,QAAjB,CAA0BC,GAA1B,CACEC,GAAG,IAAIA,GADT,EAEEC,GAAG,IAAI;AACL,MAAIA,GAAG,CAACH,QAAJ,CAAaI,IAAb,CAAkBC,GAAlB,KAA0B,oBAA9B,EAAoD;AAClDb,IAAAA,KAAK,CAACc,QAAN,CAAe;AAAEC,MAAAA,IAAI,EAAEd;AAAR,KAAf;AACAD,IAAAA,KAAK,CAACc,QAAN,CAAe;AAAEC,MAAAA,IAAI,EAAEb;AAAR,KAAf;AACD;;AACD,SAAOc,OAAO,CAACC,MAAR,CAAeN,GAAf,CAAP;AACD,CARH;AAWA,eAAeR,GAAf","sourcesContent":["import axios from 'axios';\nimport store from '../store';\nimport { LOGOUT, CLEAR_PROFILE } from '../actions/types';\n\nconst api = axios.create({\n  baseURL: '/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n/**\n intercept any error responses from the api\n and check if the token is no longer valid.\n ie. Token has expired\n logout the user if the token has expired\n**/\n\napi.interceptors.response.use(\n  res => res,\n  err => {\n    if (err.response.data.msg === 'Token is not valid') {\n      store.dispatch({ type: LOGOUT });\n      store.dispatch({ type: CLEAR_PROFILE });\n    }\n    return Promise.reject(err);\n  }\n);\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}